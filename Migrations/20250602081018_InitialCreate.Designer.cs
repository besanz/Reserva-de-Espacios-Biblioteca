// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reserva_de_Espacios_Biblioteca.Data;

#nullable disable

namespace Reserva_de_Espacios_Biblioteca.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250602081018_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CabinaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Reservas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CabinaId = 1,
                            Fin = new DateTime(2025, 6, 2, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Inicio = new DateTime(2025, 6, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            CabinaId = 2,
                            Fin = new DateTime(2025, 6, 2, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Inicio = new DateTime(2025, 6, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 3,
                            CabinaId = 1,
                            Fin = new DateTime(2025, 6, 3, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Inicio = new DateTime(2025, 6, 3, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 4,
                            CabinaId = 2,
                            Fin = new DateTime(2025, 6, 3, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Inicio = new DateTime(2025, 6, 3, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 5,
                            CabinaId = 1,
                            Fin = new DateTime(2025, 6, 4, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Inicio = new DateTime(2025, 6, 4, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 6,
                            CabinaId = 2,
                            Fin = new DateTime(2025, 6, 4, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Inicio = new DateTime(2025, 6, 4, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 7,
                            CabinaId = 1,
                            Fin = new DateTime(2025, 6, 5, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Inicio = new DateTime(2025, 6, 5, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 8,
                            CabinaId = 2,
                            Fin = new DateTime(2025, 6, 5, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Inicio = new DateTime(2025, 6, 5, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 9,
                            CabinaId = 1,
                            Fin = new DateTime(2025, 6, 6, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Inicio = new DateTime(2025, 6, 6, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 10,
                            CabinaId = 2,
                            Fin = new DateTime(2025, 6, 6, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Inicio = new DateTime(2025, 6, 6, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioId = 2
                        });
                });

            modelBuilder.Entity("Reserva_de_Espacios_Biblioteca.Data.Entities.Cabina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cabinas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacidad = 1,
                            Nombre = "Cabina Individual"
                        },
                        new
                        {
                            Id = 2,
                            Capacidad = 4,
                            Nombre = "Cabina Grupal"
                        });
                });

            modelBuilder.Entity("Reserva_de_Espacios_Biblioteca.Data.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellidos = "Pérez García",
                            Dni = "12345678A",
                            Email = "juan.perez@ejemplo.com",
                            EstaActivo = true,
                            FechaRegistro = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Juan",
                            Telefono = "612345678"
                        },
                        new
                        {
                            Id = 2,
                            Apellidos = "López Sánchez",
                            Dni = "87654321B",
                            Email = "maria.lopez@ejemplo.com",
                            EstaActivo = true,
                            FechaRegistro = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "María",
                            Telefono = "687654321"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
